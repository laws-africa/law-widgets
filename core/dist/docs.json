{
  "timestamp": "2022-11-07T15:27:11",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.17.4",
    "typescriptVersion": "4.5.4"
  },
  "components": [
    {
      "filePath": "./src/components/akoma-ntoso/akoma-ntoso.tsx",
      "encapsulation": "none",
      "tag": "la-akoma-ntoso",
      "readme": "# la-akoma-ntoso\n\nUse `<la-akoma-ntoso>` to wrap Akoma Ntoso content.\n",
      "docs": "Use `<la-akoma-ntoso>` to wrap Akoma Ntoso content.",
      "docsTags": [],
      "usage": {
        "html": "```html\n<la-akoma-ntoso> {{ your_akoma_ntoso_html }} </la-akoma-ntoso>\n```\n\nSpecify the expression FRBR URI to include tradition-specific formatting, or set\n`frbr-country` or other `frbr-*` attributes accordingly.\n\n```html\n<la-akoma-ntoso frbr-expression-uri=\"/akn/za/act/1996/constitution/eng@\"> {{ your_akoma_ntoso_html }} </la-akoma-ntoso>\n```\n\n```html\n<la-akoma-ntoso frbr-country=\"ke\" frbr-language=\"swa\"> {{ your_akoma_ntoso_html }} </la-akoma-ntoso>\n```\n\nLaws.Africa partners can fetch content from Laws.Africa using the `fetch` attribute.\nIf your partner code is not the same as your website's domain name, then also specify\nyour partner code in `partner`.\n\n```html\n<la-akoma-ntoso fetch partner=\"example.com\" frbr-expression-uri=\"/akn/za/act/1996/constitution/eng@\"></la-akoma-ntoso>\n```\n\n### Basic React example\n\n```js\nimport { LaAkomaNtoso } from '@lawsafrica/law-widgets-react';\nconst Component = () => {\n  const akomaNtosoHTML = '...';\n  return (\n    <div>\n      <LaAkomaNtoso frbr-expression-uri=\"/akn/za/act/1996/constitution/eng@\">{akomaNtosoHTML}</LaAkomaNtoso>\n    </div>\n  );\n};\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <LaAkomaNtoso frbr-expression-uri=\"/akn/za/act/1996/constitution/eng@\">\n    {{ akomaNtosoHTML }}\n  </LaAkomaNtoso>\n</template>\n<script>\nimport { LaAkomaNtoso } from '@lawsafrica/law-widgets-vue';\nexport default {\n  name: 'Component',\n  components: {\n    LaAkomaNtoso,\n  },\n  data: () => ({\n    akomaNtosoHTML: '...',\n  }),\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-akoma-ntoso--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "fetch",
          "type": "boolean",
          "mutable": true,
          "attr": "fetch",
          "reflectToAttr": true,
          "docs": "Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "frbrAuthor",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-author",
          "reflectToAttr": true,
          "docs": "The emanating actor, unless implicitly deducible by the document type (e.g., acts and bills do not usually\nrequire actor, while ministerial decrees and European legislation do)",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrCountry",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-country",
          "reflectToAttr": true,
          "docs": "Country (a two-letter or code according to ISO 3166-1 [ISO3166] or a short and unique alphanumeric codes\naccording to ISO 3166-2 [ISO3166-2]).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrDate",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-date",
          "reflectToAttr": true,
          "docs": "Original creation date (expressed in `YYYY-MM-DD` format or just `YYYY` if the year is sufficient for\nidentification purposes",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrExpressionDate",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-expression-date",
          "reflectToAttr": true,
          "docs": "Any content-specification date",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrExpressionUri",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-expression-uri",
          "reflectToAttr": true,
          "docs": "Full Akoma Ntoso FRBR Expression URI used to populate the other `frbr` fields if they are unset.\nSetting this is the preferred mechanism for ensuring tradition-specific styling.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrLanguage",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-language",
          "reflectToAttr": true,
          "docs": "The human language code in which the Expression is drafted",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrNumber",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-number",
          "reflectToAttr": true,
          "docs": "Number or title or other disambiguating feature of the Work (when appropriate, otherwise optionally the string nn)",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrSubtype",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-subtype",
          "reflectToAttr": true,
          "docs": "Subtype used if the document is anything other an `act` / `statement` / `judgment` / `doc`",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "frbrType",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-type",
          "reflectToAttr": true,
          "docs": "Type of document\n\n- For legislation – Acts, Regulations, Statutory Instruments, and the like – use `act`.\n\n- For case law, use `judgment`.\n\n- For other documents – Policies, Memoranda of Understanding, Yearbooks, Press Releases, and the like – use `doc`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "partner",
          "type": "string | undefined",
          "mutable": true,
          "attr": "partner",
          "reflectToAttr": true,
          "docs": "Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "provider",
          "type": "string",
          "mutable": false,
          "attr": "provider",
          "reflectToAttr": false,
          "docs": "Provider URL for fetching content (advanced usage only).",
          "docsTags": [],
          "default": "PROVIDER",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/decorate-external-refs/decorate-external-refs.tsx",
      "encapsulation": "none",
      "tag": "la-decorate-external-refs",
      "readme": "# la-decorate-external-refs\n\nThis is a behaviour element that decorates external references within an `<la-akoma-ntoso>` element by\nshowing a summary of the reference in a popup.\n",
      "docs": "This is a behaviour element that decorates external references within an `<la-akoma-ntoso>` element by\nshowing a summary of the reference in a popup.",
      "docsTags": [],
      "usage": {
        "html": "Place this element inside an `<la-akoma-ntoso>` element:\n\n```html\n<la-akoma-ntoso>\n  <la-decorate-external-refs popups></la-decorate-external-refs>\n\n  {{ html }}\n</la-akoma-ntoso>\n```\n\nAlternatively place it elsewhere and provide a selector to identify the `<la-akoma-ntoso>` element:\n\n```html\n<la-decorate-external-refs popups akoma-ntoso=\"#doc\"></la-decorate-external-refs>\n<la-akoma-ntoso id=\"doc\">\n  {{ html }}\n</la-akoma-ntosoi>\n```\n\n### Basic React example\n\n```js\nimport { LaDecorateExternalRefs, LaAkomaNtoso } from '@lawsafrica/law-widgets-react';\n\nconst App = () => (\n  <div>\n    <LaAkomaNtoso>\n      <LaDecorateExternalRefs popups />\n      // Akoma ntoso html\n    </LaAkomaNtoso>\n  </div>\n);\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <div>\n    <LaAkomaNtoso>\n      <LaDecorateExternalRefs popups />\n      // Akoma ntoso html\n    </LaAkomaNtoso>\n  </div>\n</template>\n\n<script>\nimport { LaAkomaNtoso, LaDecorateExternalRefs } from '@lawsafrica/law-widgets-vue';\nexport default {\n  components: {\n    LaAkomaNtoso,\n    LaDecorateExternalRefs,\n  },\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-decorate-external-refs--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "akomaNtoso",
          "type": "HTMLElement | string | undefined",
          "mutable": false,
          "attr": "akoma-ntoso",
          "reflectToAttr": false,
          "docs": "CSS selector for the la-akoma-ntoso element or HTMLELement that will be decorated. Defaults\nto the containing la-akoma-ntoso element, if any, otherwise the first\n`la-akoma-ntoso` element on the page.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "partner",
          "type": "string | undefined",
          "mutable": false,
          "attr": "partner",
          "reflectToAttr": false,
          "docs": "Partner code provided by Laws.Africa. Defaults to the hostname of your website.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "popups",
          "type": "boolean",
          "mutable": false,
          "attr": "popups",
          "reflectToAttr": false,
          "docs": "If `true`, the content of external ref targets will be shown as popups.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "provider",
          "type": "string",
          "mutable": false,
          "attr": "provider",
          "reflectToAttr": false,
          "docs": "Provider URL (advanced usage only).",
          "docsTags": [],
          "default": "PROVIDER",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/decorate-internal-refs/decorate-internal-refs.tsx",
      "encapsulation": "none",
      "tag": "la-decorate-internal-refs",
      "readme": "# la-decorate-internal-refs\n\nThis is a behaviour element that decorates internal references within an `<la-akoma-ntoso>` element by marking the\nreferences with a flag, and by showing the contents of the target of the internal reference in a popup.\n",
      "docs": "This is a behaviour element that decorates internal references within an `<la-akoma-ntoso>` element by marking the\nreferences with a flag, and by showing the contents of the target of the internal reference in a popup.",
      "docsTags": [],
      "usage": {
        "html": "Place this element inside an `<la-akoma-ntoso>` element:\n\n```html\n<la-akoma-ntoso>\n  <la-decorate-internal-refs popups flags></la-decorate-internal-refs>\n\n  {{ html }}\n</la-akoma-ntoso>\n```\n\nAlternatively place it elsewhere and provide a selector to identify the `<la-akoma-ntoso>` element:\n\n```html\n<la-decorate-internal-refs popups flags akoma-ntoso=\"#doc\"></la-decorate-internal-refs>\n<la-akoma-ntoso id=\"doc\">\n  {{ html }}\n</la-akoma-ntosoi>\n```\n\n### Basic React example\n\n```js\nimport { LaDecorateInternalRefs, LaAkomaNtoso } from '@lawsafrica/law-widgets-react';\n\nconst App = () => (\n  <div>\n    <LaAkomaNtoso>\n      <LaDecorateInternalRefs popups flags />\n      // Akoma ntoso html\n    </LaAkomaNtoso>\n  </div>\n);\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <div>\n    <LaAkomaNtoso>\n      <LaDecorateExternalRefs popups />\n      // Akoma ntoso html\n    </LaAkomaNtoso>\n  </div>\n</template>\n\n<script>\nimport { LaAkomaNtoso, LaDecorateInternalRefs } from '@lawsafrica/law-widgets-vue';\nexport default {\n  components: {\n    LaAkomaNtoso,\n    LaDecorateInternalRefs,\n  },\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-decorate-internal-refs--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "akomaNtoso",
          "type": "HTMLElement | string | undefined",
          "mutable": false,
          "attr": "akoma-ntoso",
          "reflectToAttr": false,
          "docs": "CSS selector for the la-akoma-ntoso element or HTMLELement that will be decorated. Defaults\nto the containing la-akoma-ntoso element, if any, otherwise the first\n`la-akoma-ntoso` element on the page.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "fetch",
          "type": "boolean",
          "mutable": true,
          "attr": "fetch",
          "reflectToAttr": true,
          "docs": "Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "flag",
          "type": "boolean",
          "mutable": false,
          "attr": "flag",
          "reflectToAttr": false,
          "docs": "If `true`, internal refs will be flagged with in icon to be more visible.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "partner",
          "type": "string | undefined",
          "mutable": true,
          "attr": "partner",
          "reflectToAttr": true,
          "docs": "Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "popups",
          "type": "boolean",
          "mutable": false,
          "attr": "popups",
          "reflectToAttr": false,
          "docs": "If `true`, the content of internal ref targets will be shown as popups.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "provider",
          "type": "string",
          "mutable": false,
          "attr": "provider",
          "reflectToAttr": false,
          "docs": "Provider URL for fetching content (advanced usage only).",
          "docsTags": [],
          "default": "PROVIDER",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/decorate-terms/decorate-terms.tsx",
      "encapsulation": "none",
      "tag": "la-decorate-terms",
      "readme": "# la-decorate-terms\n\nThis is a behaviour element that decorates references to defined terms within an `<la-akoma-ntoso>` element by\nmaking them clickable links, and by showing the definition of the term in a popup.\n",
      "docs": "This is a behaviour element that decorates references to defined terms within an `<la-akoma-ntoso>` element by\nmaking them clickable links, and by showing the definition of the term in a popup.",
      "docsTags": [],
      "usage": {
        "html": "Place this element inside an `<la-akoma-ntoso>` element:\n\n```html\n<la-akoma-ntoso>\n  <la-decorate-terms popup-definitions link-terms></la-decorate-terms>\n\n  {{ html }}\n</la-akoma-ntoso>\n```\n\nAlternatively place it elsewhere and provide a selector to identify the `<la-akoma-ntoso>` element:\n\n```html\n<la-decorate-terms popup-definitions link-terms akoma-ntoso=\"#doc\"></la-decorate-terms>\n\n<la-akoma-ntoso id=\"doc\">\n  {{ html }}\n</la-akoma-ntosoi>\n```\n\n### Basic React example\n\n```js\nimport { LaAkomaNtoso, LaDecorateTerms } from '@lawsafrica/law-widgets-react';\n\nconst App = () => {\n  const akomaNtosoHTML = '...';\n  return (\n    <div>\n      <LaDecorateTerms popup-definitions link-terms akoma-ntoso=\"#doc\" />\n      <LaAkomaNtoso>{akomaNtosoHTML}</LaAkomaNtoso>\n    </div>\n  );\n};\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <div>\n    <LaDecorateTerms popup-definitions link-terms akoma-ntoso=\"#doc\" />\n    <LaAkomaNtoso> {akomaNtosoHTML} </LaAkomaNtoso>\n  </div>\n</template>\n\n<script>\nimport { LaAkomaNtoso, LaDecorateTerms } from '@lawsafrica/law-widgets-vue';\nexport default {\n  components: {\n    LaAkomaNtoso,\n    LaDecorateTerms,\n  },\n  data: () => ({\n    akomaNtosoHTML: '...',\n  }),\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-decorate-terms--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "akomaNtoso",
          "type": "HTMLElement | string | undefined",
          "mutable": false,
          "attr": "akoma-ntoso",
          "reflectToAttr": false,
          "docs": "CSS selector for the la-akoma-ntoso element and HTMLElement that will be decorated. Defaults\nto the containing la-akoma-ntoso element, if any, otherwise the first\n`la-akoma-ntoso` element on the page.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "linkTerms",
          "type": "boolean",
          "mutable": false,
          "attr": "link-terms",
          "reflectToAttr": false,
          "docs": "If `true`, terms will be changed to `<a>` elements that jump to the term definition.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "popupDefinitions",
          "type": "boolean",
          "mutable": false,
          "attr": "popup-definitions",
          "reflectToAttr": false,
          "docs": "If `true`, the definitions of terms will be shown as popups.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/gutter/gutter.tsx",
      "encapsulation": "none",
      "tag": "la-gutter",
      "readme": "# la-gutter\n\nThis elements provides a gutter alongside an `<la-akoma-ntoso>` element. The gutter contains `<la-gutter-item>` elements\nwhich are linked to a reference element inside the `<la-akoma-ntoso>` element using the `anchor` attribute. The gutter\nitem is positioned horizontally alongside its anchor element.\n\nFor correct alignment, wrap `<la-gutter>` and `<la-akoma-ntoso>` inside a `<div class=\"la-akoma-ntoso-with-gutter\">` element.\n",
      "docs": "This elements provides a gutter alongside an `<la-akoma-ntoso>` element. The gutter contains `<la-gutter-item>` elements\nwhich are linked to a reference element inside the `<la-akoma-ntoso>` element using the `anchor` attribute. The gutter\nitem is positioned horizontally alongside its anchor element.\n\nFor correct alignment, wrap `<la-gutter>` and `<la-akoma-ntoso>` inside a `<div class=\"la-akoma-ntoso-with-gutter\">` element.",
      "docsTags": [],
      "usage": {
        "html": "Use this element in conjunction with an `<la-akoma-ntoso>` element, usually as a sibling.\n\n```html\n<div class=\"la-content-with-gutter\">\n  <la-akoma-ntoso id=\"akn\">\n    <div id=\"sec_1\">section 1 content</div>\n    <div id=\"sec_2\">section 2 content</div>\n  </la-akoma-ntoso>\n\n  <la-gutter akoma-ntoso=\"#akn\">\n    <la-gutter-item anchor=\"#sec_1\">comment on section 1</la-gutter-item>\n    <la-gutter-item anchor=\"#sec_2\">comment on section 2</la-gutter-item>\n  </la-gutter>\n</div>\n```\n\n### Basic React example\n\n```js\nimport React from 'react';\nimport { LaGutter, LaGutterItem, LaAkomaNtoso } from '@lawsafrica/law-widgets-react';\n\nconst App = () => {\n  return (\n    <div className=\"la-content-with-gutter\">\n      <LaAkomaNtoso id=\"akn\"></LaAkomaNtoso>\n      <LaGutter akoma-ntoso=\"#akn\">\n        <LaGutterItem>comment on section 1</LaGutterItem>\n        <LaGutterItem>comment on section 2</LaGutterItem>\n      </LaGutter>\n    </div>\n  );\n};\n\nexport default App;\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <div class=\"la-content-with-gutter\">\n    <div id=\"sec_1\">section 1 content</div>\n    <div id=\"sec_2\">section 2 content</div>\n  </div>\n</template>\n\n<script>\nimport { LaAkomaNtoso, LaGutter, LaGutterItem } from '@lawsafrica/law-widgets-vue';\nexport default {\n  components: {\n    LaAkomaNtoso,\n    LaGutter,\n    LaGutterItem,\n  },\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-gutter--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "akomaNtoso",
          "type": "HTMLElement | string | undefined",
          "mutable": false,
          "attr": "akoma-ntoso",
          "reflectToAttr": false,
          "docs": "CSS selector or HTMLElement for the la-akoma-ntoso element that will be decorated. Defaults\nto the containing la-akoma-ntoso element, if any, otherwise the first\n`la-akoma-ntoso` element on the page.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "activateNextItem",
          "returns": {
            "type": "Promise<HTMLLaGutterItemElement | null>",
            "docs": ""
          },
          "signature": "activateNextItem() => Promise<HTMLLaGutterItemElement | null>",
          "parameters": [],
          "docs": "Activates the item logically after the currently active item. The activated item's `active` property will be set to\ntrue. Returns the activated item. Or returns null if there are no items. If there is no item currently\nactive, the top-most item is activated. If the currently active item is the bottom-most item in the gutter,\nthen the top-most item will be activated. If there is one item in the gutter that is not active, then that item will be activated.",
          "docsTags": []
        },
        {
          "name": "activatePrevItem",
          "returns": {
            "type": "Promise<HTMLLaGutterItemElement | null>",
            "docs": ""
          },
          "signature": "activatePrevItem() => Promise<HTMLLaGutterItemElement | null>",
          "parameters": [],
          "docs": "Activates the item logically before the currently active item. The activated item's `active` property will be set to\ntrue. Returns the activated item. Or returns null if there are no items. If there is no item currently\nactive, the bottom-most item is activated. If the currently active item is the top-most item in the gutter,\nthen the bottom-most item will be activated. If there is one item in the gutter that is not active, then that item will be activated.",
          "docsTags": []
        },
        {
          "name": "layoutItems",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "layoutItems() => Promise<void>",
          "parameters": [],
          "docs": "Layout the gutter items.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "layoutComplete",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event emitted when `this.layout` has finished.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "laItemChanged",
          "capture": false,
          "passive": false
        },
        {
          "event": "click",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/gutter-item/gutter-item.tsx",
      "encapsulation": "none",
      "tag": "la-gutter-item",
      "readme": "# la-gutter-item\n\nA gutter item inside an `<la-gutter>`.\n\nA gutter item must be linked to an anchor element inside the `<la-akoma-ntoso>` element\nusing the `anchor` attribute. The gutter item is positioned horizontally alongside its anchor element.\n",
      "docs": "A gutter item inside an `<la-gutter>`.\n\nA gutter item must be linked to an anchor element inside the `<la-akoma-ntoso>` element\nusing the `anchor` attribute. The gutter item is positioned horizontally alongside its anchor element.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "active",
          "type": "boolean",
          "mutable": true,
          "attr": "active",
          "reflectToAttr": true,
          "docs": "Indicates that this is the active item in the gutter. Only one item can be active at a time.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "anchor",
          "type": "HTMLElement | string | undefined",
          "mutable": false,
          "attr": "anchor",
          "reflectToAttr": false,
          "docs": "CSS selector for the anchor element or HTMLElement in the enclosing gutter's `<la-akoma-ntoso>` element.",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLElement"
            },
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "laItemChanged",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event emitted when the state (`active`) of the item changes. Used by `la-gutter` to re-layout its items.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/table-of-contents/table-of-contents.tsx",
      "encapsulation": "none",
      "tag": "la-table-of-contents",
      "readme": "# la-table-of-contents\n\nThis component is an interactive table of contents generated from data passed in the `items` prop. The features of\nthis component are the following:\n\n- Expanding and collapsing table of contents items.\n- Viewing table of content items as a tree. Showing all table of content items and nested items if they exist.\n- Programmatically filtering table of content items by item `title`.\n",
      "docs": "This component is an interactive table of contents generated from data passed in the `items` prop. The features of\nthis component are the following:\n\n- Expanding and collapsing table of contents items.\n- Viewing table of content items as a tree. Showing all table of content items and nested items if they exist.\n- Programmatically filtering table of content items by item `title`.",
      "docsTags": [],
      "usage": {
        "html": "### Vanilla HTML JS Implementation\n\nThis example demos the following:\n\n- Passing in data into `items` of `la-table-of-content` via js\n- Slot usage\n\n```html\n<la-table-of-contents>\n  <span slot=\"prepend\">🏆</span>\n  <span slot=\"append\">🥙</span>\n</la-table-of-contents>\n<script>\n  const laTocElement = document.querySelector('la-table-of-contents');\n  const items = [\n    {\n      title: 'Entire document',\n      children: [\n        {\n          title: 'Ch. 1 – ',\n          children: [\n            {\n              title: 'Part B',\n            },\n          ],\n        },\n        {\n          title: 'Ch. 2 – ',\n        },\n      ],\n    },\n  ];\n  laTocElement.items = items;\n</script>\n```\n\n### Basic React example\n\n```js\nimport React from 'react';\nimport { LaTableOfContents } from '@lawsafrica/law-widgets-react';\n\nconst App = () => {\n  const items = [\n    {\n      title: 'Entire document',\n      children: [\n        {\n          title: 'Ch. 1 – ',\n          children: [\n            {\n              title: 'Part B',\n            },\n          ],\n        },\n        {\n          title: 'Ch. 2 – ',\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div>\n      <LaTableOfContents items={items} />\n    </div>\n  );\n};\n\nexport default App;\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <div>\n    <LaTableOfContent :items=\"{ items }\" />\n  </div>\n</template>\n\n<script>\nimport { LaTableOfContents } from '@lawsafrica/law-widgets-vue';\n\nexport default {\n  components: {\n    LaTableOfContents,\n  },\n  data: () => ({\n    items: [\n      {\n        title: 'Entire document',\n        children: [\n          {\n            title: 'Ch. 1 – ',\n            children: [\n              {\n                title: 'Part B',\n              },\n            ],\n          },\n          {\n            title: 'Ch. 2 – ',\n          },\n        ],\n      },\n    ],\n  }),\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-table-of-contents--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "fetch",
          "type": "boolean",
          "mutable": true,
          "attr": "fetch",
          "reflectToAttr": true,
          "docs": "Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "frbrExpressionUri",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-expression-uri",
          "reflectToAttr": true,
          "docs": "Full Akoma Ntoso FRBR Expression URI to fetch TOC information for. Only used if `fetch` is set.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "items",
          "type": "TOCItem[] | string",
          "mutable": false,
          "attr": "items",
          "reflectToAttr": false,
          "docs": "JSON value or string value parsed to array of items used to build the table of contents. Each item must have\na `title` attribute (which may be `null`), and a `children` attribute (which may be `null`).",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "TOCItem[]"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "partner",
          "type": "string | undefined",
          "mutable": true,
          "attr": "partner",
          "reflectToAttr": true,
          "docs": "Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "provider",
          "type": "string",
          "mutable": false,
          "attr": "provider",
          "reflectToAttr": false,
          "docs": "Provider URL for fetching content (advanced usage only).",
          "docsTags": [],
          "default": "PROVIDER",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "titleFilter",
          "type": "string",
          "mutable": false,
          "attr": "title-filter",
          "reflectToAttr": false,
          "docs": "value to filter items by item title",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "collapseAll",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "collapseAll() => Promise<void>",
          "parameters": [],
          "docs": "Collapses all items",
          "docsTags": []
        },
        {
          "name": "expandAll",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "expandAll() => Promise<void>",
          "parameters": [],
          "docs": "Expands all items",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "la-table-of-contents-controller"
      ],
      "dependencies": [
        "la-toc-item"
      ],
      "dependencyGraph": {
        "la-table-of-contents": [
          "la-toc-item"
        ],
        "la-toc-item": [
          "la-toc-item"
        ],
        "la-table-of-contents-controller": [
          "la-table-of-contents"
        ]
      }
    },
    {
      "filePath": "./src/components/table-of-contents-controller/table-of-contents-controller.tsx",
      "encapsulation": "none",
      "tag": "la-table-of-contents-controller",
      "readme": "# la-table-of-contents-controller\n\nThis component renders `la-table-of-contents` based on data passed to the `items` prop. It provides\nthe following functionality:\n\n- Search input widget\n- Collapse all button and Expand all button widget\n",
      "docs": "This component renders `la-table-of-contents` based on data passed to the `items` prop. It provides\nthe following functionality:\n\n- Search input widget\n- Collapse all button and Expand all button widget",
      "docsTags": [],
      "usage": {
        "html": "### Vanilla HTML JS Implementation\n\nTHis example demos the following:\n\n- Passing in data into `items` of `la-table-of-content-controller` via js\n- Slot usage\n\n```html\n<la-table-of-contents titleFilter=\"Ch. 2\">\n  <span slot=\"expand-icon\">⬇️</span>\n  <span slot=\"collapse-icon\">⬆️</span>\n</la-table-of-contents>\n<script>\n  const laTocElement = document.querySelector('la-table-of-contents');\n  const items = [\n    {\n      title: 'Entire document',\n      children: [\n        {\n          title: 'Ch. 1 – ',\n          children: [\n            {\n              title: 'Part B',\n            },\n          ],\n        },\n        {\n          title: 'Ch. 2 – ',\n          index: 9,\n        },\n      ],\n    },\n  ];\n  laTocElement.items = items;\n</script>\n```\n\n### Basic React example\n\n```js\nimport React from 'react';\nimport { LaTableOfContentsController } from '@lawsafrica/law-widgets-react';\n\nconst App = () => {\n  const items = [\n    {\n      title: 'Entire document',\n      children: [\n        {\n          title: 'Ch. 1 – ',\n          children: [\n            {\n              title: 'Part B',\n            },\n          ],\n        },\n        {\n          title: 'Ch. 2 – ',\n        },\n      ],\n    },\n  ];\n  return (\n    <div>\n      <LaTableOfContentsController items={items} />\n    </div>\n  );\n};\n\nexport default App;\n```\n\n### Basic Vue3 example\n\n```vue\n<template>\n  <div>\n    <LaTableOfContentsController :items=\"items\" />\n  </div>\n</template>\n\n<script>\nimport { LaTableOfContentsController } from '@lawsafrica/law-widgets-vue';\n\nexport default {\n  data: () => ({\n    items: [\n      {\n        title: 'Entire document',\n        children: [\n          {\n            title: 'Ch. 1 – ',\n            children: [\n              {\n                title: 'Part B',\n              },\n            ],\n          },\n          {\n            title: 'Ch. 2 – ',\n          },\n        ],\n      },\n    ],\n  }),\n  components: {\n    LaTableOfContentsController,\n  },\n};\n</script>\n```\n\n### Component stories\n\nClick [here](https://laws.africa/la-web-components/?path=/docs/library-la-table-of-contents-controller--basic-usage) for more interactive examples on Storybook JS\n"
      },
      "props": [
        {
          "name": "collapseAllBtnClasses",
          "type": "string",
          "mutable": false,
          "attr": "collapse-all-btn-classes",
          "reflectToAttr": false,
          "docs": "Additional classes added to Collapse all button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expandAllBtnClasses",
          "type": "string",
          "mutable": false,
          "attr": "expand-all-btn-classes",
          "reflectToAttr": false,
          "docs": "Additional classes added to Expand all button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "fetch",
          "type": "boolean",
          "mutable": true,
          "attr": "fetch",
          "reflectToAttr": true,
          "docs": "Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "frbrExpressionUri",
          "type": "string | undefined",
          "mutable": true,
          "attr": "frbr-expression-uri",
          "reflectToAttr": true,
          "docs": "Full Akoma Ntoso FRBR Expression URI to fetch TOC information for. Only used if `fetch` is set.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hideClearTitleFilterButton",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-clear-title-filter-button",
          "reflectToAttr": false,
          "docs": "If true, hides clear title filter button",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "items",
          "type": "TOCItem[] | string",
          "mutable": false,
          "attr": "items",
          "reflectToAttr": false,
          "docs": "JSON value of array of items or string value parsed to array of items used to build the table of contents. Each\nitem must have a `title` attribute (which may be `null`), and a `children` attribute (which may be `null`).",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "TOCItem[]"
            },
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "partner",
          "type": "string | undefined",
          "mutable": true,
          "attr": "partner",
          "reflectToAttr": true,
          "docs": "Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "undefined"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "provider",
          "type": "string",
          "mutable": false,
          "attr": "provider",
          "reflectToAttr": false,
          "docs": "Provider URL for fetching content (advanced usage only).",
          "docsTags": [],
          "default": "PROVIDER",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "titleFilterClearBtnClasses",
          "type": "string",
          "mutable": false,
          "attr": "title-filter-clear-btn-classes",
          "reflectToAttr": false,
          "docs": "Additional classes added to title filter button",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "titleFilterInputClasses",
          "type": "string",
          "mutable": false,
          "attr": "title-filter-input-classes",
          "reflectToAttr": false,
          "docs": "Additional CSS classes added to the search filter input",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "titleFilterPlaceholder",
          "type": "string",
          "mutable": false,
          "attr": "title-filter-placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder for search title filter",
          "docsTags": [],
          "default": "'Search the table of contents'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "la-table-of-contents"
      ],
      "dependencyGraph": {
        "la-table-of-contents-controller": [
          "la-table-of-contents"
        ],
        "la-table-of-contents": [
          "la-toc-item"
        ],
        "la-toc-item": [
          "la-toc-item"
        ]
      }
    },
    {
      "filePath": "./src/components/toc-item/toc-item.tsx",
      "encapsulation": "none",
      "tag": "la-toc-item",
      "readme": "# la-toc-item\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "appendHtml",
          "type": "string",
          "mutable": false,
          "attr": "append-html",
          "reflectToAttr": false,
          "docs": "HTML displayed after item title",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "collapseIconHtml",
          "type": "string",
          "mutable": false,
          "attr": "collapse-icon-html",
          "reflectToAttr": false,
          "docs": "HTML displayed in toggle button when item is not expanded",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expandIconHtml",
          "type": "string",
          "mutable": false,
          "attr": "expand-icon-html",
          "reflectToAttr": false,
          "docs": "HTML displayed in toggle button when item is expanded",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": true,
          "attr": "expanded",
          "reflectToAttr": true,
          "docs": "If true, `item` `children`, and the collapsed icon are shown but expanded icon is hidden. If false, the `item`\n`children` and collapsed icon are hidden but the expanded icon is show",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "filteredItems",
          "type": "Set<TOCItem> | null",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Array of items filtered by titleQuery used in la-toc-item to determine with item is shown or not",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "Set<TOCItem>"
            },
            {
              "type": "null"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "item",
          "type": "TOCItem",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "Item used to build the table of contents",
          "docsTags": [],
          "default": "{}",
          "values": [
            {
              "type": "TOCItem"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "prependHtml",
          "type": "string",
          "mutable": false,
          "attr": "prepend-html",
          "reflectToAttr": false,
          "docs": "HTML displayed before item title",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "itemRendered",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        },
        {
          "event": "itemTitleClicked",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "la-table-of-contents",
        "la-toc-item"
      ],
      "dependencies": [
        "la-toc-item"
      ],
      "dependencyGraph": {
        "la-toc-item": [
          "la-toc-item"
        ],
        "la-table-of-contents": [
          "la-toc-item"
        ]
      }
    }
  ]
}