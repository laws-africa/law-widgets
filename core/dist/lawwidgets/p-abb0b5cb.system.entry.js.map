{"version":3,"names":["gutterItemCss","LaGutterItemStyle0","GutterItem","exports","class_1","prototype","activeChanged","this","laItemChanged","emit","anchorChanged","onClick","active"],"sources":["src/components/gutter-item/gutter-item.scss?tag=la-gutter-item","src/components/gutter-item/gutter-item.tsx"],"sourcesContent":["la-gutter-item {\n  display: block;\n}\n","import type { EventEmitter } from '@stencil/core';\nimport { Component, Prop, Watch, Event, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'la-gutter-item',\n  styleUrl: 'gutter-item.scss',\n})\nexport class GutterItem {\n  /**\n   * CSS selector for the anchor element or HTMLElement in the enclosing gutter's `<la-akoma-ntoso>` element.\n   */\n  @Prop() anchor?: string | HTMLElement;\n\n  /**\n   * Indicates that this is the active item in the gutter. Only one item can be active at a time.\n   */\n  @Prop({ reflect: true, mutable: true }) active = false;\n\n  /**\n   * Event emitted when the state (`active`) of the item changes. Used by `la-gutter` to re-layout its items.\n   */\n  @Event() laItemChanged!: EventEmitter<void>;\n\n  @Watch('active')\n  activeChanged() {\n    this.laItemChanged.emit();\n  }\n\n  @Watch('anchor')\n  anchorChanged() {\n    this.laItemChanged.emit();\n  }\n\n  @Listen('click')\n  onClick() {\n    this.active = true;\n  }\n}\n"],"mappings":";;;0IAAA,IAAMA,EAAgB,gCACtB,IAAAC,EAAeD,E,ICMFE,EAAUC,EAAA,4B,uGAS4B,K,CAQjDC,EAAAC,UAAAC,cAAA,WACEC,KAAKC,cAAcC,M,EAIrBL,EAAAC,UAAAK,cAAA,WACEH,KAAKC,cAAcC,M,EAIrBL,EAAAC,UAAAM,QAAA,WACEJ,KAAKK,OAAS,I,8JA5BK,I","ignoreList":[]}