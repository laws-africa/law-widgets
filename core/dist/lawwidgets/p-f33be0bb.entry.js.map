{"version":3,"names":["decorateInternalRefsCss","LaDecorateInternalRefsStyle0","addPortion","frbrUri","portion","ix","indexOf","slice","endsWith","DecorateInternalRefs","this","tippies","PROVIDER","componentWillLoad","target","AkomaNtosoTarget","el","akomaNtoso","componentDidLoad","akomaNtosoElement","getElement","tippyContainer","document","createElement","className","body","appendChild","changeFlag","flag","changePopups","popups","classList","toggle","tippy","destroy","createPopups","appendTo","allowHTML","hideOnClick","interactive","maxWidth","onTrigger","bind","theme","href","reference","getAttribute","html","provision","querySelector","outerHTML","fetch","fetchContent","setContent","elementId","ensurePartner","provider","url","partner","resp","ok","text","error","getPartner"],"sources":["src/components/decorate-internal-refs/decorate-internal-refs.scss?tag=la-decorate-internal-refs","src/components/decorate-internal-refs/decorate-internal-refs.tsx"],"sourcesContent":["@use \"sass:meta\";\n\n.la-decorate-internal-refs__popup {\n  position: relative;\n  @include meta.load-css(\"~tippy.js/dist/tippy.css\");\n  @include meta.load-css(\"~tippy.js/themes/light-border.css\");\n  @include meta.load-css(\"../../styles/tippy\");\n}\n\nla-akoma-ntoso.flag-internal-refs .akn-ref[href^=\"#\"]::after {\n  display: inline-block;\n  content: \"\";\n  vertical-align: -.125em;\n  background-image: url(\"data:image/svg+xml,<svg viewBox='0 0 16 16' fill='%239c27b0' xmlns='http://www.w3.org/2000/svg'><path d='M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z'/></svg>\");\n  background-repeat: no-repeat;\n  width: 0.8rem;\n  height: 0.8rem;\n}\n","import { Component, Prop, Element, Watch } from '@stencil/core';\nimport type { Instance as Tippy } from 'tippy.js';\nimport tippy from 'tippy.js';\n\nimport { AkomaNtosoTarget } from '../../utils/linking';\nimport { PROVIDER, getPartner } from '../../utils/services';\n\n/**\n * Remove the existing portion (if any) of frbrUri, and add the new portion to it.\n */\nfunction addPortion(frbrUri: string, portion: string) {\n  const ix = frbrUri.indexOf('~');\n  if (ix > -1) {\n    frbrUri = frbrUri.slice(0, ix);\n  }\n\n  if (!frbrUri.endsWith('/')) frbrUri = frbrUri + '/';\n\n  return frbrUri + portion;\n}\n\n@Component({\n  tag: 'la-decorate-internal-refs',\n  styleUrl: 'decorate-internal-refs.scss',\n})\nexport class DecorateInternalRefs {\n  // The akn content element being decorated\n  protected akomaNtosoElement?: HTMLElement | null;\n\n  protected tippies: Tippy[] = [];\n  protected tippyContainer?: HTMLElement;\n\n  @Element() el!: HTMLElement;\n\n  /**\n   * CSS selector for the la-akoma-ntoso element or HTMLELement that will be decorated. Defaults\n   * to the containing la-akoma-ntoso element, if any, otherwise the first\n   * `la-akoma-ntoso` element on the page.\n   */\n  @Prop() akomaNtoso?: string | HTMLElement;\n\n  /**\n   * If `true`, the content of internal ref targets will be shown as popups.\n   */\n  @Prop() popups = false;\n\n  /**\n   * If `true`, internal refs will be flagged with in icon to be more visible.\n   */\n  @Prop() flag = false;\n\n  /** Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set. */\n  @Prop({ reflect: true, mutable: true }) fetch = false;\n  /** Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`. */\n  @Prop({ reflect: true, mutable: true }) partner?: string;\n\n  /** Provider URL for fetching content (advanced usage only). */\n  @Prop() provider = PROVIDER;\n\n  componentWillLoad() {\n    const target = new AkomaNtosoTarget(this.el, this.akomaNtoso, () => {\n      this.componentDidLoad();\n    });\n    this.akomaNtosoElement = target.getElement();\n    this.tippyContainer = document.createElement('div');\n    this.tippyContainer.className = 'la-decorate-internal-refs__popup';\n    document.body.appendChild(this.tippyContainer);\n  }\n\n  componentDidLoad() {\n    this.changeFlag(this.flag);\n    this.changePopups(this.popups);\n  }\n\n  @Watch('flag')\n  changeFlag(flag: boolean) {\n    if (this.akomaNtosoElement) {\n      this.akomaNtosoElement.classList.toggle('flag-internal-refs', flag);\n    }\n  }\n\n  @Watch('popups')\n  changePopups(popups: boolean) {\n    // remove existing popups\n    for (const tippy of this.tippies) {\n      tippy.destroy();\n    }\n    this.tippies = [];\n\n    if (this.akomaNtosoElement && popups) {\n      this.createPopups();\n    }\n  }\n\n  createPopups() {\n    // @ts-ignore\n    this.tippies = tippy('a.akn-ref[href^=\"#\"]', {\n      appendTo: () => this.tippyContainer,\n      allowHTML: true,\n      hideOnClick: true,\n      interactive: true,\n      maxWidth: 450,\n      onTrigger: this.onTrigger.bind(this),\n      theme: 'light-border',\n    });\n  }\n\n  async onTrigger(tippy: Tippy) {\n    if (this.akomaNtosoElement) {\n      const href: string = tippy.reference.getAttribute('href') || '';\n      let html: string | null = '';\n      const provision: HTMLElement | null = this.akomaNtosoElement.querySelector(href);\n\n      if (provision) {\n        html = provision.outerHTML;\n      } else if (this.fetch) {\n        // try fetching it remotely\n        html = await this.fetchContent(href.slice(1));\n      }\n\n      if (html) {\n        tippy.setContent(`\n        <div>\n          <div class=\"tippy-content__body\"><la-akoma-ntoso>${html}</la-akoma-ntoso></div>\n        </div>`);\n      }\n    }\n  }\n\n  async fetchContent(elementId: string) {\n    this.ensurePartner();\n\n    if (this.provider && this.akomaNtosoElement) {\n      const frbrUri = this.akomaNtosoElement.getAttribute('frbr-expression-uri');\n      if (frbrUri) {\n        const url = this.provider + '/p/' + this.partner + '/e/portion' + addPortion(frbrUri, '~' + elementId);\n        try {\n          const resp = await fetch(url);\n          if (resp.ok) {\n            return await resp.text();\n          }\n        } catch (error) {\n          // ignore\n        }\n      }\n    }\n    return null;\n  }\n\n  ensurePartner() {\n    if (!this.partner) {\n      this.partner = getPartner();\n    }\n  }\n}\n"],"mappings":";;;8JAAA,MAAMA,EAA0B,q2NAChC,MAAAC,EAAeD,ECSf,SAASE,EAAWC,EAAiBC,GACnC,MAAMC,EAAKF,EAAQG,QAAQ,KAC3B,GAAID,GAAM,EAAG,CACXF,EAAUA,EAAQI,MAAM,EAAGF,E,CAG7B,IAAKF,EAAQK,SAAS,KAAML,EAAUA,EAAU,IAEhD,OAAOA,EAAUC,CACnB,C,MAMaK,EAAoB,M,yBAIrBC,KAAAC,QAAmB,G,sCAeZ,M,UAKF,M,WAGiC,M,qCAK7BC,C,CAEnB,iBAAAC,GACE,MAAMC,EAAS,IAAIC,EAAiBL,KAAKM,GAAIN,KAAKO,YAAY,KAC5DP,KAAKQ,kBAAkB,IAEzBR,KAAKS,kBAAoBL,EAAOM,aAChCV,KAAKW,eAAiBC,SAASC,cAAc,OAC7Cb,KAAKW,eAAeG,UAAY,mCAChCF,SAASG,KAAKC,YAAYhB,KAAKW,e,CAGjC,gBAAAH,GACER,KAAKiB,WAAWjB,KAAKkB,MACrBlB,KAAKmB,aAAanB,KAAKoB,O,CAIzB,UAAAH,CAAWC,GACT,GAAIlB,KAAKS,kBAAmB,CAC1BT,KAAKS,kBAAkBY,UAAUC,OAAO,qBAAsBJ,E,EAKlE,YAAAC,CAAaC,GAEX,IAAK,MAAMG,KAASvB,KAAKC,QAAS,CAChCsB,EAAMC,S,CAERxB,KAAKC,QAAU,GAEf,GAAID,KAAKS,mBAAqBW,EAAQ,CACpCpB,KAAKyB,c,EAIT,YAAAA,GAEEzB,KAAKC,QAAUsB,EAAM,uBAAwB,CAC3CG,SAAU,IAAM1B,KAAKW,eACrBgB,UAAW,KACXC,YAAa,KACbC,YAAa,KACbC,SAAU,IACVC,UAAW/B,KAAK+B,UAAUC,KAAKhC,MAC/BiC,MAAO,gB,CAIX,eAAMF,CAAUR,GACd,GAAIvB,KAAKS,kBAAmB,CAC1B,MAAMyB,EAAeX,EAAMY,UAAUC,aAAa,SAAW,GAC7D,IAAIC,EAAsB,GAC1B,MAAMC,EAAgCtC,KAAKS,kBAAkB8B,cAAcL,GAE3E,GAAII,EAAW,CACbD,EAAOC,EAAUE,S,MACZ,GAAIxC,KAAKyC,MAAO,CAErBJ,QAAarC,KAAK0C,aAAaR,EAAKrC,MAAM,G,CAG5C,GAAIwC,EAAM,CACRd,EAAMoB,WAAW,+EAEoCN,2C,GAM3D,kBAAMK,CAAaE,GACjB5C,KAAK6C,gBAEL,GAAI7C,KAAK8C,UAAY9C,KAAKS,kBAAmB,CAC3C,MAAMhB,EAAUO,KAAKS,kBAAkB2B,aAAa,uBACpD,GAAI3C,EAAS,CACX,MAAMsD,EAAM/C,KAAK8C,SAAW,MAAQ9C,KAAKgD,QAAU,aAAexD,EAAWC,EAAS,IAAMmD,GAC5F,IACE,MAAMK,QAAaR,MAAMM,GACzB,GAAIE,EAAKC,GAAI,CACX,aAAaD,EAAKE,M,EAEpB,MAAOC,G,GAKb,OAAO,I,CAGT,aAAAP,GACE,IAAK7C,KAAKgD,QAAS,CACjBhD,KAAKgD,QAAUK,G","ignoreList":[]}