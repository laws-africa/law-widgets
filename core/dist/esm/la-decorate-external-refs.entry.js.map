{"file":"la-decorate-external-refs.entry.js","mappings":";;;;;;;;AAAA,MAAM,uBAAuB,GAAG,s8MAAs8M,CAAC;AACv+M,qCAAe,uBAAuB;;MCUzB,oBAAoB;;;QAIrB,YAAO,GAAY,EAAE,CAAC;;sBAef,KAAK;;wBAUH,QAAQ;;IAE3B,iBAAiB;QACf,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE;YAC5D,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,kCAAkC,CAAC;QACnE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAChD;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;IAGD,YAAY,CAAC,MAAe;;QAE1B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;YAChC,KAAK,CAAC,OAAO,EAAE,CAAC;SACjB;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,iBAAiB,IAAI,MAAM,EAAE;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAED,YAAY;QACV,IAAI,IAAI,CAAC,iBAAiB,EAAE;;YAE1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,EAAE;gBAC7F,QAAQ,EAAE,MAAM,IAAI,CAAC,cAAc;gBACnC,SAAS,EAAE,IAAI;gBACf,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,GAAG;gBACb,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpC,KAAK,EAAE,cAAc;aACtB,CAAC,CAAC;SACJ;KACF;IAED,MAAM,SAAS,CAAC,KAAY;QAC1B,MAAM,OAAO,GAAW,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;;;QAKxE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,OAAO,EAAE;YACX,KAAK,CAAC,UAAU,CAAC;;6CAEsB,OAAO;eACrC,CAAC,CAAC;SACZ;KACF;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,CAAC;SAC7B;KACF;IAED,MAAM,YAAY,CAAC,OAAe;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,OAAO,CAAC;YACxE,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,IAAI,CAAC,EAAE,EAAE;oBACX,OAAO,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC1B;aACF;YAAC,OAAO,KAAK,EAAE;;aAEf;SACF;QACD,OAAO,IAAI,CAAC;KACb;;;;;;;;;;","names":[],"sources":["src/components/decorate-external-refs/decorate-external-refs.scss?tag=la-decorate-external-refs","src/components/decorate-external-refs/decorate-external-refs.tsx"],"sourcesContent":["@use \"sass:meta\";\n\n.la-decorate-external-refs__popup {\n  position: relative;\n  @include meta.load-css(\"~tippy.js/dist/tippy.css\");\n  @include meta.load-css(\"~tippy.js/themes/light-border.css\");\n  @include meta.load-css(\"../../styles/tippy\");\n}\n","import { Component, Prop, Element, Watch } from '@stencil/core';\nimport type { Instance as Tippy } from 'tippy.js';\nimport tippy from 'tippy.js';\n\nimport { AkomaNtosoTarget } from '../../utils/linking';\nimport { PROVIDER, getPartner } from '../../utils/services';\n\n@Component({\n  tag: 'la-decorate-external-refs',\n  styleUrl: 'decorate-external-refs.scss',\n})\nexport class DecorateExternalRefs {\n  // The akn content element being decorated\n  protected akomaNtosoElement?: HTMLElement | null;\n\n  protected tippies: Tippy[] = [];\n  protected tippyContainer?: HTMLElement;\n\n  @Element() el!: HTMLElement;\n\n  /**\n   * CSS selector for the la-akoma-ntoso element or HTMLELement that will be decorated. Defaults\n   * to the containing la-akoma-ntoso element, if any, otherwise the first\n   * `la-akoma-ntoso` element on the page.\n   */\n  @Prop() akomaNtoso?: string | HTMLElement;\n\n  /**\n   * If `true`, the content of external ref targets will be shown as popups.\n   */\n  @Prop() popups = false;\n\n  /**\n   * Partner code provided by Laws.Africa. Defaults to the hostname of your website.\n   */\n  @Prop() partner?: string;\n\n  /**\n   * Provider URL (advanced usage only).\n   */\n  @Prop() provider = PROVIDER;\n\n  componentWillLoad() {\n    const target = new AkomaNtosoTarget(this.el, this.akomaNtoso, () => {\n      this.componentDidLoad();\n    });\n    this.akomaNtosoElement = target.getElement();\n    this.tippyContainer = document.createElement('div');\n    this.tippyContainer.className = 'la-decorate-external-refs__popup';\n    document.body.appendChild(this.tippyContainer);\n  }\n\n  componentDidLoad() {\n    this.changePopups(this.popups);\n  }\n\n  @Watch('popups')\n  changePopups(popups: boolean) {\n    // remove existing popups\n    for (const tippy of this.tippies) {\n      tippy.destroy();\n    }\n    this.tippies = [];\n\n    if (this.akomaNtosoElement && popups) {\n      this.createPopups();\n    }\n  }\n\n  createPopups() {\n    if (this.akomaNtosoElement) {\n      // @ts-ignore\n      this.tippies = tippy(this.akomaNtosoElement.querySelectorAll('a.akn-ref[data-href^=\"/akn/\"]'), {\n        appendTo: () => this.tippyContainer,\n        allowHTML: true,\n        hideOnClick: true,\n        interactive: true,\n        maxWidth: 450,\n        onTrigger: this.onTrigger.bind(this),\n        theme: 'light-border',\n      });\n    }\n  }\n\n  async onTrigger(tippy: Tippy) {\n    const frbrUri: string = tippy.reference.getAttribute('data-href') || '';\n\n    // TODO: if there's nothing, don't show the popup\n    // TODO: delay showing until we have content\n\n    const content = await this.fetchContent(frbrUri);\n    if (content) {\n      tippy.setContent(`\n        <div>\n          <div class=\"tippy-content__body\">${content}</div>\n        </div>`);\n    }\n  }\n\n  ensurePartner() {\n    if (!this.partner) {\n      this.partner = getPartner();\n    }\n  }\n\n  async fetchContent(frbrUri: string) {\n    this.ensurePartner();\n\n    if (frbrUri && this.provider) {\n      const url = this.provider + '/p/' + this.partner + '/e/popup' + frbrUri;\n      try {\n        const resp = await fetch(url);\n        if (resp.ok) {\n          return await resp.text();\n        }\n      } catch (error) {\n        // ignore\n      }\n    }\n    return null;\n  }\n}\n"],"version":3}