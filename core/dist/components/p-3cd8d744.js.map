{"file":"p-3cd8d744.js","mappings":";;;;;AAAA,MAAM,UAAU,GAAG,2tBAA2tB,CAAC;AAC/uB,wBAAe,UAAU;;MCSZ,OAAO;;;;;;QA+DlB,qBAAgB,GAAG,CAAC,CAAM;YACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B,CAAC;oBA7DsB,EAAE;6BAKmB,IAAI;2BAK3B,EAAE;0BAKH,EAAE;8BAKE,EAAE;gCAKA,EAAE;wBAMsB,IAAI;;IAIvD,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;KAChC;IAkBD,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;IAMD,MAAM;;QACJ,MAAM,QAAQ,GAAG,CAAC,EAAC,MAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,MAAM,CAAA,CAAC;QAC9C,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC;QAExD,MAAM,oBAAoB,GAAG;YAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,gBAAgB,GAAG,YAAM,SAAS,EAAE,IAAI,CAAC,gBAAgB,GAAS,GAAG,yBAAc,CAAC;aACjG;YACD,OAAO,IAAI,CAAC,cAAc,GAAG,YAAM,SAAS,EAAE,IAAI,CAAC,cAAc,GAAS,GAAG,yBAAc,CAAC;SAC7F,CAAC;QAEF,QACE,EAAC,IAAI,qBAAM,QAAQ,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAG,KAAK,EAAE,GAAG,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,KACvF,WAAK,KAAK,EAAC,UAAU,IAClB,QAAQ,IACP,WAAK,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,IACzE,oBAAoB,EAAE,CACnB,IACJ,IAAI,CACJ,EAEN,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,iBAAiB,IACzB,IAAI,CAAC,WAAW,GAAG,WAAK,KAAK,EAAC,0BAA0B,EAAC,SAAS,EAAE,IAAI,CAAC,WAAW,GAAQ,GAAG,IAAI,EACpG,SAAG,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,IACzE,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,EACH,IAAI,CAAC,UAAU,GAAG,WAAK,KAAK,EAAC,yBAAyB,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,GAAQ,GAAG,IAAI,CAC7F,EACN,WAAK,KAAK,EAAC,mBAAmB,IAC5B,eAAQ,CACJ,CACF,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/toc-item/toc-item.scss?tag=la-toc-item","src/components/toc-item/toc-item.tsx"],"sourcesContent":["la-toc-item {\n  * {\n    box-sizing: border-box;\n  }\n\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n\n  .indented {\n    width: 1.4em;\n    height: 1.4em;\n  }\n\n  .content {\n    flex: 1;\n  }\n\n  .content__action {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .content__action__title {\n    flex-grow: 1;\n  }\n\n  .content__children {\n    display: none;\n  }\n\n  &[expanded] > .content > .content__children {\n    display: inherit;\n  }\n\n  &.excluded {\n    display: none;\n  }\n\n  .indented__toggle-btn {\n    cursor: pointer;\n    display: inline-block;\n    // mimic button styles\n    font-size: smaller;\n    text-align: center;\n    padding: 1px 6px;\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport type { EventEmitter } from '@stencil/core';\nimport { Component, Prop, h, Host, Event } from '@stencil/core';\n\nimport type { TOCItem } from '../table-of-contents/table-of-contents';\n\n@Component({\n  tag: 'la-toc-item',\n  styleUrl: 'toc-item.scss',\n})\nexport class TocItem {\n  /**\n   * Item used to build the table of contents\n   * */\n  @Prop() item: TOCItem = {};\n\n  /**\n   * Array of items filtered by titleQuery used in la-toc-item to determine with item is shown or not\n   * */\n  @Prop() filteredItems: Set<TOCItem> | null = null;\n\n  /**\n   * HTML displayed before item title\n   * */\n  @Prop() prependHtml = '';\n\n  /**\n   * HTML displayed after item title\n   * */\n  @Prop() appendHtml = '';\n\n  /**\n   * HTML displayed in toggle button when item is expanded\n   * */\n  @Prop() expandIconHtml = '';\n\n  /**\n   * HTML displayed in toggle button when item is not expanded\n   * */\n  @Prop() collapseIconHtml = '';\n\n  /**\n   * If true, `item` `children`, and the collapsed icon are shown but expanded icon is hidden. If false, the `item`\n   * `children` and collapsed icon are hidden but the expanded icon is show\n   * */\n  @Prop({ reflect: true, mutable: true }) expanded = true;\n\n  root: HTMLElement | undefined;\n\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n\n  @Event({\n    eventName: 'itemRendered',\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  itemRendered!: EventEmitter;\n\n  @Event({\n    eventName: 'itemTitleClicked',\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  itemTitleClicked!: EventEmitter;\n\n  componentDidRender() {\n    this.itemRendered.emit();\n  }\n\n  onItemTitleClick = (e: any) => {\n    this.itemTitleClicked.emit(e);\n  };\n\n  render() {\n    const isParent = !!this.item.children?.length;\n    const showItem = !this.filteredItems || this.filteredItems.has(this.item);\n    const href = this.item.href || `#${this.item.id || ''}`;\n\n    const renderToggleBtnInner = () => {\n      if (this.expanded) {\n        return this.collapseIconHtml ? <span innerHTML={this.collapseIconHtml}></span> : <span>▼</span>;\n      }\n      return this.expandIconHtml ? <span innerHTML={this.expandIconHtml}></span> : <span>►</span>;\n    };\n\n    return (\n      <Host {...(isParent ? { parent: isParent } : {})} class={`${!showItem ? 'excluded' : ''}`}>\n        <div class=\"indented\">\n          {isParent ? (\n            <div class=\"indented__toggle-btn\" role=\"button\" onClick={() => this.toggle()}>\n              {renderToggleBtnInner()}\n            </div>\n          ) : null}\n        </div>\n\n        <div class=\"content\">\n          <div class=\"content__action\">\n            {this.prependHtml ? <div class=\"content__action__prepend\" innerHTML={this.prependHtml}></div> : null}\n            <a href={href} class=\"content__action__title\" onClick={this.onItemTitleClick}>\n              {this.item.title}\n            </a>\n            {this.appendHtml ? <div class=\"content__action__append\" innerHTML={this.appendHtml}></div> : null}\n          </div>\n          <div class=\"content__children\">\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}