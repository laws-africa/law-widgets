{"version":3,"file":"table-of-contents.js","sourceRoot":"","sources":["../../../src/components/table-of-contents/table-of-contents.tsx"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport { Prop, h, Element, Method, Watch, State, Component, Host } from '@stencil/core';\n\nimport { PROVIDER, getPartner } from '../../utils/services';\n\n/**\n * An item in the table of contents. Each item must have a `title` attribute (which may be `null`),\n * and a `children` attribute (which may be `null`).\n */\nexport interface TOCItem {\n  title?: string;\n  id?: string;\n  href?: string;\n  expanded?: boolean;\n  children?: TOCItem[];\n}\n\n@Component({\n  tag: 'la-table-of-contents',\n})\nexport class TableOfContents {\n  /**\n   * JSON value or string value parsed to array of items used to build the table of contents. Each item must have\n   * a `title` attribute (which may be `null`), and a `children` attribute (which may be `null`).\n   *\n   * Items may optionally have an id attribute and an href attribute, which are used to build the links for each item.\n   * */\n  @Prop() items: TOCItem[] | string = [];\n\n  /**\n   * value to filter items by item title\n   * */\n  @Prop() titleFilter = '';\n\n  /**\n   * Should items be expanded by default? This can be overridden by setting the expanded property for individual items.\n   * */\n  @Prop() expanded = true;\n\n  /** Full Akoma Ntoso FRBR Expression URI to fetch TOC information for. Only used if `fetch` is set. */\n  @Prop({ reflect: true, mutable: true }) frbrExpressionUri?: string;\n  /** Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set. */\n  @Prop({ reflect: true, mutable: true }) fetch = false;\n  /** Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`. */\n  @Prop({ reflect: true, mutable: true }) partner?: string;\n  /** Provider URL for fetching content (advanced usage only). */\n  @Prop() provider = PROVIDER;\n\n  @State() filteredItems: Set<TOCItem> | null = null;\n\n  @State() innerItems: TOCItem[] = [];\n\n  @Element() el!: HTMLElement;\n\n  protected expandIconHtml = '';\n  protected collapseIconHtml = '';\n\n  @Watch('items')\n  parseItemsProp(newValue: any) {\n    if (typeof newValue === 'string') {\n      this.innerItems = JSON.parse(newValue);\n    } else if (Array.isArray(newValue)) {\n      this.innerItems = [...newValue];\n    }\n  }\n\n  @Watch('provider')\n  @Watch('frbrExpressionUri')\n  @Watch('fetch')\n  refetch() {\n    this.fetchContent();\n  }\n\n  async fetchContent() {\n    this.ensurePartner();\n\n    if (this.fetch && this.frbrExpressionUri && this.provider) {\n      const url = this.provider + '/p/' + this.partner + '/e/we/toc.json' + this.frbrExpressionUri;\n      try {\n        const resp = await fetch(url);\n        if (resp.ok) {\n          // @ts-ignore\n          this.innerItems = (await resp.json()).toc;\n        }\n      } catch (error) {\n        // ignore\n      }\n    }\n  }\n\n  ensurePartner() {\n    if (!this.partner) {\n      this.partner = getPartner();\n    }\n  }\n\n  getSlotHTML(selector: string) {\n    const element = this.el.querySelector(selector);\n    /**\n     * If slots originate from `la-table-of-contents`, query for slot html is\n     * `this.el.querySelector(\"[slot]\").innerHTML`\n     * If slot originate from `la-table-of-contents-controller` query for slot html is\n     * `this.el.querySelector(\"[slot] [slot]\").innerHTML`\n     * */\n\n    // Slots originating from la-table-of-content-controller\n    if (element?.querySelector(selector)) {\n      return element.querySelector(selector)?.innerHTML || '';\n    }\n\n    // Slots originating from la-table-of-content\n    return element?.innerHTML || '';\n  }\n\n  componentWillLoad() {\n    this.expandIconHtml = this.getSlotHTML(\"[slot='expand-icon']\");\n    this.collapseIconHtml = this.getSlotHTML(\"[slot='collapse-icon']\");\n    this.parseItemsProp(this.items);\n    this.titleFilterChanged(this.titleFilter);\n    this.fetchContent();\n  }\n\n  /**\n   * Expands all items\n   */\n  @Method()\n  async expandAll() {\n    Array.from(this.el.querySelectorAll('la-toc-item')).forEach((item) => {\n      // @ts-ignore\n      item.expanded = true;\n    });\n  }\n\n  /**\n   * Collapses all items\n   */\n  @Method()\n  async collapseAll() {\n    Array.from(this.el.querySelectorAll('la-toc-item')).forEach((item) => {\n      // @ts-ignore\n      item.expanded = false;\n    });\n  }\n\n  @Watch('titleFilter')\n  titleFilterChanged(filter: string) {\n    if (filter) {\n      const needle = filter.toLocaleLowerCase().trim();\n      const filteredItems: Set<TOCItem> = new Set<TOCItem>();\n\n      // recursively include all children\n      // eslint-disable-next-line no-inner-declarations\n      function includeKids(item: TOCItem) {\n        for (const child of item.children || []) {\n          filteredItems.add(child);\n          includeKids(child);\n        }\n      }\n\n      // Recursive function that determines whether or not an item should be rendered.\n      // An item is rendered if its title matches the filter, or any of its children should be rendered.\n      // eslint-disable-next-line no-inner-declarations\n      function shouldInclude(item: TOCItem): boolean {\n        // this will be true if this item matches the search, or any child does\n        let include: boolean = (item.title?.toLocaleLowerCase() || '').includes(needle);\n\n        if (include) {\n          // this item matches, show include all children automatically, no need to go any deeper\n          includeKids(item);\n        } else {\n          // if any children match, then this node must be included\n          if (item.children) {\n            for (const child of item.children) {\n              include = shouldInclude(child) || include;\n            }\n          }\n        }\n\n        if (include) {\n          filteredItems.add(item);\n        }\n\n        return include;\n      }\n\n      for (const item of this.innerItems) {\n        shouldInclude(item);\n      }\n\n      this.filteredItems = filteredItems;\n    } else {\n      this.filteredItems = null;\n    }\n    this.expandAll();\n  }\n\n  /**\n   * Render items recursively. We render from the bottom up, allowing us to append children into their\n   * parents. Rendering recursively here rather than inside la-toc-item means we can make use of global\n   * configuration details without having to pass them down the tree.\n   */\n  renderItem(item: TOCItem) {\n    // render the children first, so we can add them to the parent\n    const kids = (item.children || []).map((child) => this.renderItem(child));\n    // if the item has an explicit expanded value, use that, otherwise use the tree's default value\n    const expanded = item.expanded === undefined ? this.expanded : item.expanded;\n\n    return <la-toc-item\n      item={item}\n      filteredItems={this.filteredItems}\n      expandIconHtml={this.expandIconHtml}\n      collapseIconHtml={this.collapseIconHtml}\n      expanded={expanded}\n    >{kids}</la-toc-item>;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div style={{ display: 'none' }}>\n          <slot name=\"expand-icon\"></slot>\n          <slot name=\"collapse-icon\"></slot>\n        </div>\n        {this.innerItems.map((item) => this.renderItem(item))}\n      </Host>\n    );\n  }\n}\n"]}