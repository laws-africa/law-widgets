{"version":3,"file":"decorate-terms.js","sourceRoot":"","sources":["../../../src/components/decorate-terms/decorate-terms.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEhE,OAAO,KAAK,MAAM,UAAU,CAAC;AAE7B,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAMvD,MAAM,OAAO,aAAa;;QAGd,mBAAc,GAAG,uDAAuD,CAAC;QAEzE,YAAO,GAAY,EAAE,CAAC;;gCAeL,KAAK;yBAKZ,KAAK;;IAEzB,iBAAiB;QACf,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;YACjE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,0BAA0B,CAAC;QAC3D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;YAED,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAGD,sBAAsB,CAAC,KAAc;QACnC,yBAAyB;QACzB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjC,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,IAAI,CAAC,iBAAiB,IAAI,KAAK,EAAE,CAAC;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAGD,eAAe;QACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/F,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACxE,CAAC;IACH,CAAC;IAED,iCAAiC;IACjC,gBAAgB;QACd,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAc,yBAAyB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;;gBAC1G,MAAM,IAAI,GAAG,MAAA,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,0CAAE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBACjE,MAAM,OAAO,GAAuB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACrE,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;oBACpB,OAAO,CAAC,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;oBAC/C,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,YAAY;QACV,aAAa;QACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE;YACzE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc;YACnC,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;YACpC,KAAK,EAAE,cAAc;SACtB,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,KAAY;QACpB,MAAM,GAAG,GAAgB,KAAK,CAAC,SAAwB,CAAC;QACxD,MAAM,IAAI,GAAuB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAEzD,IAAI,IAAI,EAAE,CAAC;YACT,KAAK,CAAC,UAAU,CAAC;;8CAEuB,GAAG,CAAC,SAAS;6DACE,IAAI,CAAC,SAAS;eAC5D,CAAC,CAAC;QACb,CAAC;IACH,CAAC;IAED,aAAa,CAAC,SAAkB;QAC9B,MAAM,IAAI,GAAG,SAAS,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACrD,iCAAiC;QACjC,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,kBAAkB,IAAI,IAAI,CAAC,CAAC;QAC1E,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrD,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,YAAY,WAAW,EAAE,CAAC;oBAChD,MAAM,EAAE,GAAE,CAAC,CAAC,MAAqB,CAAC;oBAClC,IAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;wBACtC,MAAM,MAAM,GAAW,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;wBACpE,IAAI,MAAM,EAAE,CAAC;4BACX,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE,CAAC;wBAC3C,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Element, Watch } from '@stencil/core';\nimport type { Instance as Tippy } from 'tippy.js';\nimport tippy from 'tippy.js';\n\nimport { AkomaNtosoTarget } from '../../utils/linking';\n\n@Component({\n  tag: 'la-decorate-terms',\n  styleUrl: 'decorate-terms.scss',\n})\nexport class DecorateTerms {\n  // The akn content element being decorated\n  protected akomaNtosoElement?: HTMLElement | null;\n  protected defnContainers = '.akn-p, .akn-subsection, .akn-section, .akn-blockList';\n\n  protected tippies: Tippy[] = [];\n  protected tippyContainer?: HTMLElement;\n\n  @Element() el!: HTMLElement;\n\n  /**\n   * CSS selector for the la-akoma-ntoso element and HTMLElement that will be decorated. Defaults\n   * to the containing la-akoma-ntoso element, if any, otherwise the first\n   * `la-akoma-ntoso` element on the page.\n   */\n  @Prop() akomaNtoso?: string | HTMLElement;\n\n  /**\n   * If `true`, the definitions of terms will be shown as popups.\n   */\n  @Prop() popupDefinitions = false;\n\n  /**\n   * If `true`, terms will be changed to `<a>` elements that jump to the term definition.\n   */\n  @Prop() linkTerms = false;\n\n  componentWillLoad() {\n    const target = new AkomaNtosoTarget(this.el, this.akomaNtoso, () => {\n      this.componentDidLoad();\n    });\n    this.akomaNtosoElement = target.getElement();\n    this.tippyContainer = document.createElement('div');\n    this.tippyContainer.className = 'la-decorate-terms__popup';\n    document.body.appendChild(this.tippyContainer);\n  }\n\n  componentDidLoad() {\n    if (this.akomaNtosoElement) {\n      this.setupDefinitions();\n\n      if (this.linkTerms) {\n        this.makeTermLinks();\n      }\n\n      this.changePopupDefinitions(this.popupDefinitions);\n    }\n  }\n\n  @Watch('popupDefinitions')\n  changePopupDefinitions(popup: boolean) {\n    // remove existing popups\n    for (const tippy of this.tippies) {\n      tippy.destroy();\n    }\n    this.tippies = [];\n\n    if (this.akomaNtosoElement && popup) {\n      this.createPopups();\n    }\n\n    this.toggleCssClasses();\n  }\n\n  @Watch('linkTerms')\n  changeLinkTerms() {\n    this.toggleCssClasses();\n  }\n\n  toggleCssClasses() {\n    if (this.akomaNtosoElement) {\n      this.akomaNtosoElement.classList.toggle('show-terms', this.linkTerms || this.popupDefinitions);\n      this.akomaNtosoElement.classList.toggle('link-terms', this.linkTerms);\n    }\n  }\n\n  // tag term definition containers\n  setupDefinitions() {\n    if (this.akomaNtosoElement) {\n      Array.from(this.akomaNtosoElement.querySelectorAll<HTMLElement>('.akn-def[data-refersto]')).forEach((def) => {\n        const term = def.getAttribute('data-refersto')?.replace('#', '');\n        const closest: HTMLElement | null = def.closest(this.defnContainers);\n        if (closest && term) {\n          closest.dataset.defines = def.dataset.refersto;\n          closest.setAttribute('id', `defn-${term}`);\n        }\n      });\n    }\n  }\n\n  createPopups() {\n    // @ts-ignore\n    this.tippies = tippy(this.akomaNtosoElement.querySelectorAll('.akn-term'), {\n      appendTo: () => this.tippyContainer,\n      allowHTML: true,\n      content: '',\n      hideOnClick: true,\n      interactive: true,\n      maxWidth: 450,\n      onTrigger: this.onTrigger.bind(this),\n      theme: 'light-border',\n    });\n  }\n\n  onTrigger(tippy: Tippy) {\n    const ref: HTMLElement = tippy.reference as HTMLElement;\n    const defn: HTMLElement | null = this.getDefinition(ref);\n\n    if (defn) {\n      tippy.setContent(`\n        <div>\n          <div class=\"tippy-content__title\">${ref.innerText}</div>\n          <div class=\"tippy-content__body\"><la-akoma-ntoso>${defn.outerHTML}</la-akoma-ntoso></div>\n        </div>`);\n    }\n  }\n\n  getDefinition(reference: Element): HTMLElement | null {\n    const term = reference.getAttribute('data-refersto');\n    // find where the term is defined\n    if (this.akomaNtosoElement) {\n      return this.akomaNtosoElement.querySelector(`[data-defines=\"${term}\"]`);\n    }\n    return null;\n  }\n\n  makeTermLinks() {\n    if (this.akomaNtosoElement) {\n      this.akomaNtosoElement.addEventListener('click', (e) => {\n        if (e.target && e.target instanceof HTMLElement) {\n          const el= e.target as HTMLElement;\n          if (el.classList.contains('akn-term')) {\n            const termId: string = (el.dataset.refersto || '').replace('#', '');\n            if (termId) {\n              window.location.hash = `#defn-${termId}`;\n            }\n          }\n        }\n      });\n    }\n  }\n}\n"]}