{"version":3,"file":"akoma-ntoso.js","sourceRoot":"","sources":["../../../src/components/akoma-ntoso/akoma-ntoso.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEhE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAM5D,MAAM,OAAO,UAAU;;;;;;;;;;;qBAyC2B,KAAK;;wBAKlC,QAAQ;;IAM3B,OAAO;QACL,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,sBAAsB,CAAC,QAAgB;QACrC,mBAAmB;QACnB,MAAM,EAAE,GACN,0XAA0X,CAAC;QAC7X,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACnC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;;gBACzC,IAAI,MAAA,MAAM,CAAC,MAAM,0CAAG,GAAG,CAAC,EAAE,CAAC;oBACzB,QAAQ,GAAG,EAAE,CAAC;wBACZ,KAAK,SAAS;4BACZ,IAAI,CAAC,IAAI,CAAC,WAAW;gCAAE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC7D,MAAM;wBACR,KAAK,SAAS;4BACZ,IAAI,CAAC,IAAI,CAAC,QAAQ;gCAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BACvD,MAAM;wBACR,KAAK,SAAS;4BACZ,IAAI,CAAC,IAAI,CAAC,WAAW;gCAAE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC7D,MAAM;wBACR,KAAK,OAAO;4BACV,IAAI,CAAC,IAAI,CAAC,UAAU;gCAAE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3D,MAAM;wBACR,KAAK,MAAM;4BACT,IAAI,CAAC,IAAI,CAAC,QAAQ;gCAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BACvD,MAAM;wBACR,KAAK,QAAQ;4BACX,IAAI,CAAC,IAAI,CAAC,UAAU;gCAAE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC3D,MAAM;wBACR,KAAK,iBAAiB;4BACpB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAC7B,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;4BACjF,CAAC;4BACD,MAAM;wBACR,KAAK,UAAU;4BACb,IAAI,CAAC,IAAI,CAAC,YAAY;gCAAE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAC/D,MAAM;oBACV,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC1D,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACzF,IAAI,CAAC;gBACH,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;oBACZ,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;gBACxC,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,SAAS;YACX,CAAC;QACH,CAAC;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAClF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Prop, Watch } from '@stencil/core';\n\nimport { PROVIDER, getPartner } from '../../utils/services';\n\n@Component({\n  tag: 'la-akoma-ntoso',\n  styleUrl: 'akoma-ntoso.scss',\n})\nexport class AkomaNtoso {\n  /**\n   * Full Akoma Ntoso FRBR Expression URI used to populate the other `frbr` fields if they are unset.\n   * Setting this is the preferred mechanism for ensuring tradition-specific styling.\n   * */\n  @Prop({ reflect: true, mutable: true }) frbrExpressionUri?: string;\n  /**\n   * Country (a two-letter or code according to ISO 3166-1 [ISO3166] or a short and unique alphanumeric codes\n   * according to ISO 3166-2 [ISO3166-2]).\n   * */\n  @Prop({ reflect: true, mutable: true }) frbrCountry?: string;\n  /**\n   * Type of document\n   *\n   * - For legislation – Acts, Regulations, Statutory Instruments, and the like – use `act`.\n   *\n   * - For case law, use `judgment`.\n   *\n   * - For other documents – Policies, Memoranda of Understanding, Yearbooks, Press Releases, and the like – use `doc`.\n   * */\n  @Prop({ reflect: true, mutable: true }) frbrType?: string;\n  /** Subtype used if the document is anything other an `act` / `statement` / `judgment` / `doc` */\n  @Prop({ reflect: true, mutable: true }) frbrSubtype?: string;\n  /** The emanating actor, unless implicitly deducible by the document type (e.g., acts and bills do not usually\n   *  require actor, while ministerial decrees and European legislation do)\n   *  */\n  @Prop({ reflect: true, mutable: true }) frbrAuthor?: string;\n  /** Original creation date (expressed in `YYYY-MM-DD` format or just `YYYY` if the year is sufficient for\n   * identification purposes\n   * */\n  @Prop({ reflect: true, mutable: true }) frbrDate?: string;\n  /**\n   * Number or title or other disambiguating feature of the Work (when appropriate, otherwise optionally the string nn)\n   * */\n  @Prop({ reflect: true, mutable: true }) frbrNumber?: string;\n  /** Any content-specification date */\n  @Prop({ reflect: true, mutable: true }) frbrExpressionDate?: string;\n  /** The human language code in which the Expression is drafted */\n  @Prop({ reflect: true, mutable: true }) frbrLanguage?: string;\n\n  /** Fetch content from Laws.Africa services? Requires a Laws.Africa partnership and the frbrExpressionUri property to be set. */\n  @Prop({ reflect: true, mutable: true }) fetch = false;\n  /** Partner code to use when fetching content from Laws.Africa. Defaults to the `location.hostname`. */\n  @Prop({ reflect: true, mutable: true }) partner?: string;\n\n  /** Provider URL for fetching content (advanced usage only). */\n  @Prop() provider = PROVIDER;\n\n  @Element() el!: HTMLElement;\n\n  @Watch('provider')\n  @Watch('fetch')\n  refetch() {\n    this.fetchContent();\n  }\n\n  @Watch('frbrExpressionUri')\n  parseFrbrExpressionUri(newValue: string) {\n    /*eslint-disable */\n    const ex =\n      '^(/(?<prefix>akn))/(?<country>[a-z]{2})(-(?<locality>[^/]+))?/(?<doctype>[^/]+)(/(?<subtype>[^0-9][^/]*))?(/(?<actor>[^0-9][^/]*))?/(?<date>[0-9]{4}(-[0-9]{2}(-[0-9]{2})?)?)/(?<number>[^/]+)(/(((?<language>[a-z]{3})(?<expression_date>[@:][^/]*)?(/!?(?<expression_component>[^/]+?)?(/(?<expression_subcomponent>[^.]+))?)?(.(?<format>[a-z0-9]+))?)|!?(?<work_component>[^/]+)))?$';\n    const regExp = new RegExp(ex, 'g');\n    const output = regExp.exec(newValue);\n    if (output?.groups) {\n      Object.keys(output.groups).forEach((key) => {\n        if (output.groups?.[key]) {\n          switch (key) {\n            case 'country':\n              if (!this.frbrCountry) this.frbrCountry = output.groups[key];\n              break;\n            case 'doctype':\n              if (!this.frbrType) this.frbrType = output.groups[key];\n              break;\n            case 'subtype':\n              if (!this.frbrSubtype) this.frbrSubtype = output.groups[key];\n              break;\n            case 'actor':\n              if (!this.frbrAuthor) this.frbrAuthor = output.groups[key];\n              break;\n            case 'date':\n              if (!this.frbrDate) this.frbrDate = output.groups[key];\n              break;\n            case 'number':\n              if (!this.frbrNumber) this.frbrNumber = output.groups[key];\n              break;\n            case 'expression_date':\n              if (!this.frbrExpressionDate) {\n                this.frbrExpressionDate = output.groups[key].replace('@', '').replace(':', '');\n              }\n              break;\n            case 'language':\n              if (!this.frbrLanguage) this.frbrLanguage = output.groups[key];\n              break;\n          }\n        }\n      });\n    }\n\n    this.fetchContent();\n  }\n\n  async fetchContent() {\n    this.ensurePartner();\n\n    if (this.fetch && this.frbrExpressionUri && this.provider) {\n      const url = this.provider + '/p/' + this.partner + '/e/portion' + this.frbrExpressionUri;\n      try {\n        const resp = await fetch(url);\n        if (resp.ok) {\n          this.el.innerHTML = await resp.text();\n        }\n      } catch (error) {\n        // ignore\n      }\n    }\n  }\n\n  ensurePartner() {\n    if (!this.partner) {\n      this.partner = getPartner();\n    }\n  }\n\n  componentWillLoad() {\n    if (this.frbrExpressionUri) this.parseFrbrExpressionUri(this.frbrExpressionUri);\n  }\n}\n"]}