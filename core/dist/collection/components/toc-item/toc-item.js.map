{"version":3,"file":"toc-item.js","sourceRoot":"","sources":["../../../src/components/toc-item/toc-item.tsx"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport type { EventEmitter } from '@stencil/core';\nimport { Component, Prop, h, Host, Event } from '@stencil/core';\n\nimport type { TOCItem } from '../table-of-contents/table-of-contents';\n\n@Component({\n  tag: 'la-toc-item',\n  styleUrl: 'toc-item.scss',\n})\nexport class TocItem {\n  /**\n   * Item used to build the table of contents\n   * */\n  @Prop() item: TOCItem = {};\n\n  /**\n   * Array of items filtered by titleQuery used in la-toc-item to determine with item is shown or not\n   * */\n  @Prop() filteredItems: Set<TOCItem> | null = null;\n\n  /**\n   * HTML displayed before item title\n   * */\n  @Prop() prependHtml = '';\n\n  /**\n   * HTML displayed after item title\n   * */\n  @Prop() appendHtml = '';\n\n  /**\n   * HTML displayed in toggle button when item is expanded\n   * */\n  @Prop() expandIconHtml = '';\n\n  /**\n   * HTML displayed in toggle button when item is not expanded\n   * */\n  @Prop() collapseIconHtml = '';\n\n  /**\n   * If true, `item` `children`, and the collapsed icon are shown but expanded icon is hidden. If false, the `item`\n   * `children` and collapsed icon are hidden but the expanded icon is show\n   * */\n  @Prop({ reflect: true, mutable: true }) expanded = true;\n\n  root: HTMLElement | undefined;\n\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n\n  @Event({\n    eventName: 'itemRendered',\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  itemRendered!: EventEmitter;\n\n  @Event({\n    eventName: 'itemTitleClicked',\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  itemTitleClicked!: EventEmitter;\n\n  componentDidRender() {\n    this.itemRendered.emit();\n  }\n\n  onItemTitleClick = (e: any) => {\n    this.itemTitleClicked.emit(e);\n  };\n\n  render() {\n    const isParent = !!this.item.children?.length;\n    const showItem = !this.filteredItems || this.filteredItems.has(this.item);\n    const href = this.item.href || `#${this.item.id || ''}`;\n\n    const renderToggleBtnInner = () => {\n      if (this.expanded) {\n        return this.collapseIconHtml ? <span innerHTML={this.collapseIconHtml}></span> : <span>▼</span>;\n      }\n      return this.expandIconHtml ? <span innerHTML={this.expandIconHtml}></span> : <span>►</span>;\n    };\n\n    return (\n      <Host {...(isParent ? { parent: isParent } : {})} class={`${!showItem ? 'excluded' : ''}`}>\n        <div class=\"indented\">\n          {isParent ? (\n            <div class=\"indented__toggle-btn\" role=\"button\" onClick={() => this.toggle()}>\n              {renderToggleBtnInner()}\n            </div>\n          ) : null}\n        </div>\n\n        <div class=\"content\">\n          <div class=\"content__action\">\n            {this.prependHtml ? <div class=\"content__action__prepend\" innerHTML={this.prependHtml}></div> : null}\n            <a href={href} class=\"content__action__title\" onClick={this.onItemTitleClick}>\n              {this.item.title}\n            </a>\n            {this.appendHtml ? <div class=\"content__action__append\" innerHTML={this.appendHtml}></div> : null}\n          </div>\n          <div class=\"content__children\">\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}