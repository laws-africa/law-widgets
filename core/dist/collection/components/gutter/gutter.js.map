{"version":3,"file":"gutter.js","sourceRoot":"","sources":["../../../src/components/gutter/gutter.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAEvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAMxC,MAAM,OAAO,MAAM;;QAQjB,qCAAqC;QAC3B,kBAAa,GAAG,GAAG,CAAC;;;IAa9B,iBAAiB;QACf,8CAA8C;QAC9C,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAExE,sDAAsD;QACtD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7E,2CAA2C;QAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAGD,WAAW,CAAC,KAAkB;QAC5B,MAAM,MAAM,GAAmC,KAAK,CAAC,MAAiC,CAAC;QACvF,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE,CAAC;YACnB,wFAAwF;YACxF,4EAA4E;YAC5E,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAGD,OAAO,CAAC,KAAiB;QACvB,mEAAmE;QACnE,MAAM,MAAM,GAAuB,KAAK,CAAC,MAAqB,CAAC;QAC/D,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAChD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAYD;;OAEG;IACH,qBAAqB,CAAC,UAAmC;QACvD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACxC,IAAI,IAAI,IAAI,UAAU,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAEvD,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC1B,IAAI,IAAI,CAAC,cAAc;oBAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;gBAE1D,kHAAkH;gBAClH,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC3D,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACtD,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IAEH,KAAK,CAAC,WAAW;QACf,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,aAAa;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;IACH,CAAC;IAED;;;;;OAKG;IAEH,KAAK,CAAC,gBAAgB;QACpB,MAAM,KAAK,GAA8B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1G,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;aAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5B,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/D,MAAM,cAAc,GAClB,eAAe,KAAK,CAAC,CAAC,IAAI,eAAe,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;YACzG,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,OAAO,cAAc,CAAC;QACxB,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED;;;;;OAKG;IAEH,KAAK,CAAC,gBAAgB;QACpB,MAAM,KAAK,GAA8B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1G,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;aAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5B,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/D,MAAM,cAAc,GAClB,eAAe,KAAK,CAAC,CAAC,IAAI,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;YACzG,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,OAAO,cAAc,CAAC;QACxB,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;IACpD,CAAC;IAED,eAAe;QACb,aAAa;QACb,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC;IACrE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import type { EventEmitter } from '@stencil/core';\nimport { Component, Element, Prop, Listen, Method, Event } from '@stencil/core';\nimport debounce from 'lodash/debounce';\n\nimport { getAkomaNtosoElement } from '../../utils/linking';\n\nimport { GutterLayout } from './layout';\n\n@Component({\n  tag: 'la-gutter',\n  styleUrl: 'gutter.scss',\n})\nexport class Gutter {\n  // The akn content element being decorated\n  protected akomaNtosoElement?: HTMLElement | null;\n\n  protected layout?: GutterLayout;\n  protected resizeObserver?: ResizeObserver;\n  protected mutationObserver?: MutationObserver;\n\n  // Delay in msecs to debounce updates\n  protected debounceDelay = 100;\n  protected queueLayout: any;\n\n  /**\n   * CSS selector or HTMLElement for the la-akoma-ntoso element that will be decorated. Defaults\n   * to the containing la-akoma-ntoso element, if any, otherwise the first\n   * `la-akoma-ntoso` element on the page.\n   */\n  // TODO: should  we be watching this? What if it changes?\n  @Prop() akomaNtoso?: string | HTMLElement;\n\n  @Element() el!: HTMLElement;\n\n  componentWillLoad() {\n    // TODO: watch for changes to the akn content?\n    this.akomaNtosoElement = getAkomaNtosoElement(this.el, this.akomaNtoso);\n\n    // setup a debounced function to trigger a layout run.\n    this.queueLayout = debounce(this.layoutItems.bind(this), this.debounceDelay);\n\n    // re-run layout when child elements change\n    this.mutationObserver = new MutationObserver(this.queueLayout);\n    this.mutationObserver.observe(this.el, { childList: true });\n  }\n\n  componentDidLoad() {\n    this.setupLayout();\n    this.layoutItems();\n  }\n\n  disconnectedCallback() {\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  @Listen('laItemChanged')\n  itemChanged(event: CustomEvent) {\n    const target: HTMLLaGutterItemElement | null = event.target as HTMLLaGutterItemElement;\n    if (target?.active) {\n      // set all other items inactive. if there was a previously active item, this change will\n      // trigger a new event, but the debounce will prevent an unnecessary layout.\n      this.setOtherItemsInactive(target);\n    }\n    this.queueLayout();\n  }\n\n  @Listen('click')\n  clicked(event: MouseEvent) {\n    // a click in the gutter, outside of an item, deactivates all items\n    const target: HTMLElement | null = event.target as HTMLElement;\n    if (target && !target.closest('la-gutter-item')) {\n      Array.from(this.items()).forEach((item) => {\n        item.active = false;\n      });\n    }\n  }\n\n  /**\n   * Event emitted when `this.layout` has finished.\n   */\n  @Event({\n    eventName: 'layoutComplete',\n    composed: true,\n    cancelable: true,\n  })\n  layoutComplete!: EventEmitter<void>;\n\n  /**\n   * Ensure all items except this one are set as inactive.\n   */\n  setOtherItemsInactive(activeItem: HTMLLaGutterItemElement) {\n    Array.from(this.items()).forEach((item) => {\n      if (item != activeItem) {\n        item.active = false;\n      }\n    });\n  }\n\n  setupLayout() {\n    if (this.akomaNtosoElement) {\n      this.layout = new GutterLayout(this.akomaNtosoElement);\n\n      if (window.ResizeObserver) {\n        if (this.resizeObserver) this.resizeObserver.disconnect();\n\n        // add observer to re-layout when the containing document changes size, which implies marker positions will change\n        this.resizeObserver = new ResizeObserver(this.queueLayout);\n        this.resizeObserver.observe(this.akomaNtosoElement);\n      }\n    }\n  }\n\n  /**\n   * Layout the gutter items.\n   */\n  @Method()\n  async layoutItems() {\n    if (this.layout) {\n      // @ts-ignore\n      this.layout.layout([...this.items()]);\n      this.layoutComplete.emit();\n    }\n  }\n\n  /**\n   * Activates the item logically after the currently active item. The activated item's `active` property will be set to\n   * true. Returns the activated item. Or returns null if there are no items. If there is no item currently\n   * active, the top-most item is activated. If the currently active item is the bottom-most item in the gutter,\n   * then the top-most item will be activated. If there is one item in the gutter that is not active, then that item will be activated.\n   */\n  @Method()\n  async activateNextItem() {\n    const items: HTMLLaGutterItemElement[] = this.layout ? this.layout.sortItems(this.getVisibleItems()) : [];\n\n    if (items.length === 1) {\n      items[0].active = true;\n      return items[0];\n    } else if (items.length > 1) {\n      const activeItemIndex = items.findIndex((item) => item.active);\n      const nextActiveItem =\n        activeItemIndex === -1 || activeItemIndex === items.length - 1 ? items[0] : items[activeItemIndex + 1];\n      nextActiveItem.active = true;\n      return nextActiveItem;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Activates the item logically before the currently active item. The activated item's `active` property will be set to\n   * true. Returns the activated item. Or returns null if there are no items. If there is no item currently\n   * active, the bottom-most item is activated. If the currently active item is the top-most item in the gutter,\n   * then the bottom-most item will be activated. If there is one item in the gutter that is not active, then that item will be activated.\n   */\n  @Method()\n  async activatePrevItem() {\n    const items: HTMLLaGutterItemElement[] = this.layout ? this.layout.sortItems(this.getVisibleItems()) : [];\n\n    if (items.length === 1) {\n      items[0].active = true;\n      return items[0];\n    } else if (items.length > 1) {\n      const activeItemIndex = items.findIndex((item) => item.active);\n      const nextActiveItem =\n        activeItemIndex === -1 || activeItemIndex === 0 ? items[items.length - 1] : items[activeItemIndex - 1];\n      nextActiveItem.active = true;\n      return nextActiveItem;\n    } else {\n      return null;\n    }\n  }\n\n  items(): NodeListOf<HTMLLaGutterItemElement> {\n    return this.el.querySelectorAll('la-gutter-item');\n  }\n\n  getVisibleItems(): HTMLLaGutterItemElement[] {\n    // @ts-ignore\n    return [...this.items()].filter((i) => i.style.display !== 'none');\n  }\n}\n"]}